#+TITLE:     CIS192 Project Proposal
#+DATE:      2012-03-22 Thu
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t author:nil
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:   
#+LINK_HOME: 
#+XSLT:


* Group
  - Nick Watson
  - Zachary Wasserman (zwass)

* Problem
  We are building a system to encode hidden messages into images. As
  discussed in CIS551 (Computer and Network Security), one can
  slightly modify the pixels of an image in order to encode data,
  without making changes visible to a casual observer. This process is
  called "watermarking." By comparing to a reference image, the
  receiver of a watermarked image can retrieve the hidden encoded
  data.

* Features
  - Encoding and decoding of hidden data in watermarked images
  - Various styles of encoding, with options for tradeoffs between
    secrecy and volume of encoded data
  - Integration with online photo sharing/hosting to allow seamless
    hidden message transmission
  - (Maybe) GUI for experimenting with watermarking parameters

* Packages
  - The core will rely on the Python Imaging Library
    (http://www.pythonware.com/products/pil/) for image manipulation.
  - Python Requests
    (http://docs.python-requests.org/en/v0.10.7/index.html) for
    interaction with web based photo APIs

* Milestones
  - Basic watermarked encoding and decoding
  - Additional watermarking schemes
  - Integration with web-based image sharing
  - (Maybe) GUI

* Responsibilities
** Nick
   - Basic encoding/decoding
   - Additional encoding schemes
** Zach
   - Basic encoding/decoding
   - Web integration
     












